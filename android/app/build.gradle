name: Android CI/CD

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-debug:
    name: Build Debug APK
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install dependencies
        run: |
          npm ci
          npm install

      - name: Sync Capacitor (web assets are static)
        run: npm run sync

      - name: Grant execute permission for gradlew
        run: chmod +x android/gradlew

      - name: Build Debug APK
        run: |
          cd android
          ./gradlew assembleDebug --no-daemon

      - name: Upload Debug APK
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: android/app/build/outputs/apk/debug/app-debug.apk
          retention-days: 30

  build-release:
    name: Build Release APK/AAB
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install dependencies
        run: npm ci

      - name: Sync Capacitor (web assets are static)
        run: npm run sync

      - name: Grant execute permission for gradlew
        run: chmod +x android/gradlew

      # Decode keystore from secrets
      - name: Decode Keystore
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 -d > android/app/release-keystore.jks

      # Build signed release APK
      - name: Build Release APK
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          cd android
          ./gradlew assembleRelease --no-daemon
        env:
          KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

      # Build AAB for Play Store
      - name: Build Release AAB (Bundle)
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        run: |
          cd android
          ./gradlew bundleRelease --no-daemon
        env:
          KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

      # Upload signed APK
      - name: Upload Release APK
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: release-apk
          path: android/app/build/outputs/apk/release/app-release.apk
          retention-days: 90

      # Upload AAB for Play Store
      - name: Upload Release AAB
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 != '' }}
        uses: actions/upload-artifact@v4
        with:
          name: release-aab
          path: android/app/build/outputs/bundle/release/app-release.aab
          retention-days: 90

      # Build unsigned release if no keystore
      - name: Build Unsigned Release APK
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 == '' }}
        run: |
          cd android
          ./gradlew assembleRelease --no-daemon

      - name: Upload Unsigned Release APK
        if: ${{ secrets.ANDROID_KEYSTORE_BASE64 == '' }}
        uses: actions/upload-artifact@v4
        with:
          name: unsigned-release-apk
          path: android/app/build/outputs/apk/release/app-release-unsigned.apk
          retention-days: 30